// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Barbershop {
  id         String       @id
  name       String
  onwer      User         @relation(fields: [owner_id], references: [id])
  owner_id   String       @map("owner_id")
  created_at DateTime
  updated_at DateTime
  members    Member[]
  open_hours Open_Hours[]

  @@map("barbershops")
}

model Open_Hours {
  id            String     @id
  barbershop_id String     @map("barbershop_id")
  barbershop    Barbershop @relation(fields: [barbershop_id], references: [id])
  day_week      Int
  open_time     DateTime   @db.Time()
  close_time    DateTime   @db.Time()
  created_at    DateTime
  updated_at    DateTime

  @@map("open_hours")
}

model User {
  id          String       @id
  name        String
  email       String       @unique
  password    String
  created_at  DateTime
  updated_at  DateTime
  member_on   Member[]
  barbershops Barbershop[]
}

enum Role {
  ADMIN
  BARBER
  CLIENT
}

model Member {
  id            String     @id
  role          Role       @default(BARBER)
  barbershop_id String     @map("barbershop_id")
  user_id       String     @map("user_id")
  created_at    DateTime
  updated_at    DateTime
  user          User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  barbershop    Barbershop @relation(fields: [barbershop_id], references: [id], onDelete: Cascade)

  @@unique([barbershop_id, user_id])
  @@map("members")
}
